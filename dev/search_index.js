var documenterSearchIndex = {"docs":
[{"location":"#PostgresCatalog.jl-1","page":"Home","title":"PostgresCatalog.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"PostgresCatalog is a Julia library for introspecting Postgres databases and generating models of the database structure.  It provides information about database schemas, types, tables, columns, unique and foreign key constraints.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Ability to modify the database structure will be added in a future release.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Use the Julia package manager.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> using Pkg\njulia> Pkg.add(\"PostgresCatalog\")","category":"page"},{"location":"#Usage-Guide-1","page":"Home","title":"Usage Guide","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"To demonstrate PostgresCatalog, we create a database containing just one table.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using LibPQ\n\nconn = LibPQ.Connection(\"\")\n\nexecute(conn, \"BEGIN\")\n\nexecute(conn,\n        \"\"\"\n        CREATE TYPE patient_sex_enum AS ENUM ('male', 'female', 'other', 'unknown');\n\n        CREATE TABLE patient (\n            id int4 NOT NULL,\n            mrn text NOT NULL,\n            sex patient_sex_enum NOT NULL DEFAULT 'unknown',\n            mother_id int4,\n            father_id int4,\n            CONSTRAINT patient_uk UNIQUE (id),\n            CONSTRAINT patient_pk PRIMARY KEY (mrn),\n            CONSTRAINT patient_mother_fk FOREIGN KEY (mother_id) REFERENCES patient (id),\n            CONSTRAINT patient_father_fk FOREIGN KEY (father_id) REFERENCES patient (id)\n        );\n        \"\"\")","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Function PostgresCatalog.introspect generates a PostgresCatalog.PGCatalog object containing a model of this database.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using PostgresCatalog\n\ncat = PostgresCatalog.introspect(conn)\n#-> DATABASE \" â€¦ \"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"By traversing the catalog, we can obtain the table model represented by a PostgresCatalog.PGTable object.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"scm = cat[\"public\"]\n#-> SCHEMA \"public\"\n\ntbl = scm[\"patient\"]\n#-> TABLE \"patient\"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The table owns column models, which are represented by PostgresCatalog.PGColumn objects.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"foreach(println, tbl)\n#=>\nCOLUMN \"patient\".\"id\" \"int4\" NOT NULL\nCOLUMN \"patient\".\"mrn\" \"text\" NOT NULL\nCOLUMN \"patient\".\"sex\" \"patient_sex_enum\" NOT NULL\nCOLUMN \"patient\".\"mother_id\" \"int4\" NULL\nCOLUMN \"patient\".\"father_id\" \"int4\" NULL\n=#","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Column properties can be discovered through model attributes.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"col = tbl[\"sex\"]\n#-> COLUMN \"patient\".\"sex\" \"patient_sex_enum\" NOT NULL\n\ncol.name\n#-> \"sex\"\n\ncol.type\n#-> TYPE \"patient_sex_enum\"\n\ncol.type.labels\n#-> [\"male\", \"female\", \"other\", \"unknown\"]\n\ncol.not_null\n#-> true\n\ncol.default\n#-> \"'unknown'::patient_sex_enum\"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"The table also owns the models of its unique and foreign key constraints.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"tbl.primary_key\n#-> CONSTRAINT \"patient\".\"patient_pk\" PRIMARY KEY (\"mrn\")\n\ntbl.primary_key.name\n#-> \"patient_pk\"\n\nforeach(println, tbl.primary_key.columns)\n#-> COLUMN \"patient\".\"mrn\" \"text\" NOT NULL\n\nforeach(println, tbl.unique_keys)\n#=>\nCONSTRAINT \"patient\".\"patient_pk\" PRIMARY KEY (\"mrn\")\nCONSTRAINT \"patient\".\"patient_uk\" UNIQUE (\"id\")\n=#\n\nforeach(println, tbl.foreign_keys)\n#=>\nCONSTRAINT \"patient\".\"patient_father_fk\" FOREIGN KEY (\"father_id\") REFERENCES \"patient\" (\"id\")\nCONSTRAINT \"patient\".\"patient_mother_fk\" FOREIGN KEY (\"mother_id\") REFERENCES \"patient\" (\"id\")\n=#","category":"page"},{"location":"#API-Reference-1","page":"Home","title":"API Reference","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"PostgresCatalog.introspect\nPostgresCatalog.PGCatalog\nPostgresCatalog.PGSchema\nPostgresCatalog.PGType\nPostgresCatalog.PGTable\nPostgresCatalog.PGColumn\nPostgresCatalog.PGUniqueKey\nPostgresCatalog.PGForeignKey","category":"page"},{"location":"#PostgresCatalog.introspect","page":"Home","title":"PostgresCatalog.introspect","text":"introspect(conn::LibPQ.Connection) :: PGCatalog\n\nIntrospects a Postgres database and generates a model of the database structure.\n\n\n\n\n\n","category":"function"},{"location":"#PostgresCatalog.PGCatalog","page":"Home","title":"PostgresCatalog.PGCatalog","text":"Model of a Postgres database.\n\nname: name of the database;\nschemas: collection of schemas owned by the database.\n\n\n\n\n\n","category":"type"},{"location":"#PostgresCatalog.PGSchema","page":"Home","title":"PostgresCatalog.PGSchema","text":"Model of a database schema.\n\ncatalog: database that owns the schema;\nname: name of the schema;\ncomment: comment on the schema;\ntype: collection of types owned by the schema;\ntables: collection of tables owned by the schema.\n\n\n\n\n\n","category":"type"},{"location":"#PostgresCatalog.PGType","page":"Home","title":"PostgresCatalog.PGType","text":"Model of a type.\n\nschema: schema that owns the type;\nname: name of the type;\nlabels: vector of labels for an ENUM type; nothing otherwise;\ncomment: comment on the type;\ncolumns: set of columns of this type.\n\n\n\n\n\n","category":"type"},{"location":"#PostgresCatalog.PGTable","page":"Home","title":"PostgresCatalog.PGTable","text":"Model of a table.\n\nschema: schema that owns the table;\nname: name of the table;\ncomment: comment on the table;\ncolumns: collection of table columns;\nprimary_key: primary key of the table, if any;\nunique_keys: collection of unique keys defined on the table;\nforeign_keys: collection of foreign keys defined on the table;\nreferring_foreign_keys: set of foreign keys that refer to this table.\n\n\n\n\n\n","category":"type"},{"location":"#PostgresCatalog.PGColumn","page":"Home","title":"PostgresCatalog.PGColumn","text":"Model of a column.\n\ntable: table that owns the column;\nname: name of the column;\ntype: type of the column;\nnot_null: set if the column has NOT NULL constraint;\ndefault: SQL expression that calculates the default column value; or nothing;\ncomment: comment on the column.\nunique_keys: set of unique keys that include this column;\nforeign_keys: set of foreign keys that include this column;\nreferring_foreign_keys: set of foreign keys that target this column.\n\n\n\n\n\n","category":"type"},{"location":"#PostgresCatalog.PGUniqueKey","page":"Home","title":"PostgresCatalog.PGUniqueKey","text":"Model of a unique key constraint.\n\ntable: table that owns the key;\nname: name of the constraint;\ncolumns: columns included in the key;\nprimary: set if this is the primary key;\ncomment: comment on the constraint.\n\n\n\n\n\n","category":"type"},{"location":"#PostgresCatalog.PGForeignKey","page":"Home","title":"PostgresCatalog.PGForeignKey","text":"Model of a foreign key constraint.\n\ntable: table that owns the key;\nname: name of the constraint;\ncolumns: columns included in the key;\ntarget_table: table targeted by the key;\ntarget_columns: columns targeted by the key;\non_delete: ON DELETE action;\non_update: ON UPDATE action;\ncomment: comment on the constraint.\n\n\n\n\n\n","category":"type"}]
}
